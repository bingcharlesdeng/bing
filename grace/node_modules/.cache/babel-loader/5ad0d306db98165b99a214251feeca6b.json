{"ast":null,"code":"var _jsxFileName = \"/Users/charlesdeng/code/projects/grace/src/projects.js\";\nimport React, { useState } from 'react';\nimport Project from './project'; // Import Project component\nimport { projects } from './projectList'; // Import projects data\nimport Option from './option'; // Import Option component\n\nfunction Projects() {\n  const [selectedFilter, setSelectedFilter] = useState('all'); // Initial filter state\n  const [sortedProjects, setSortedProjects] = useState(projects.slice()); // Initially unsorted copy of projects\n  const [selectedSort, setSelectedSort] = useState(''); // Initial sort selection (default to none)\n\n  const handleFilterChange = event => {\n    setSelectedFilter(event.target.value);\n    const filteredProjects = projects.filter(project => project.category.toLowerCase().includes(event.target.value.toLowerCase()));\n    setSortedProjects(filteredProjects);\n  };\n  const handleSortChange = sortOption => {\n    // Receive sortOption as argument\n    setSelectedSort(sortOption);\n    let sortedProjects = [...projects]; // Initialize sortedProjects with the projects array\n    switch (sortOption) {\n      case 'newest':\n        sortedProjects = [...sortedProjects].sort((a, b) => b.date - a.date);\n        break;\n      case 'oldest':\n        sortedProjects = [...sortedProjects].sort((a, b) => a.date - b.date);\n        break;\n      case 'name-asc':\n        sortedProjects = [...sortedProjects].sort((a, b) => a.title > b.title ? 1 : -1);\n        break;\n      case 'name-desc':\n        sortedProjects = [...sortedProjects].sort((a, b) => a.title < b.title ? 1 : -1);\n        break;\n      default:\n        sortedProjects = projects.slice();\n      // Reset to original order if no sort selected\n    }\n    setSortedProjects(sortedProjects);\n  };\n  const filteredProjectsForDisplay = sortedProjects.filter(project => project.title !== 'Web Development' // Filter out \"Web Development\" project\n  );\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"projects\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"projects-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Projects\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-filters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Filter by Category:\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"filter\",\n    value: selectedFilter,\n    onChange: handleFilterChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"All\"), projects.map(project => /*#__PURE__*/React.createElement(Option, {\n    key: project.category,\n    value: project.category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, project.category))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"sort\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Sort by:\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"sort\",\n    value: \"\",\n    onChange: e => handleSortChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"None\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"newest\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Newest First\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"oldest\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Oldest First\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"name-asc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Name (A-Z)\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"name-desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Name (Z-A)\"))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"project-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Here are some of the projects I've been working on:\"), filteredProjectsForDisplay.map(project => /*#__PURE__*/React.createElement(Project, Object.assign({\n    key: project.title\n  }, project, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }))));\n}\nexport default Projects;","map":{"version":3,"names":["React","useState","Project","projects","Option","Projects","selectedFilter","setSelectedFilter","sortedProjects","setSortedProjects","slice","selectedSort","setSelectedSort","handleFilterChange","event","target","value","filteredProjects","filter","project","category","toLowerCase","includes","handleSortChange","sortOption","sort","a","b","date","title","filteredProjectsForDisplay","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","map","key","e","Object","assign"],"sources":["/Users/charlesdeng/code/projects/grace/src/projects.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Project from './project'; // Import Project component\nimport { projects } from './projectList'; // Import projects data\nimport Option from './option'; // Import Option component\n\nfunction Projects() {\n  const [selectedFilter, setSelectedFilter] = useState('all'); // Initial filter state\n  const [sortedProjects, setSortedProjects] = useState(projects.slice()); // Initially unsorted copy of projects\n  const [selectedSort, setSelectedSort] = useState(''); // Initial sort selection (default to none)\n\n  const handleFilterChange = (event) => {\n    setSelectedFilter(event.target.value);\n    const filteredProjects = projects.filter((project) =>\n      project.category.toLowerCase().includes(event.target.value.toLowerCase())\n    );\n    setSortedProjects(filteredProjects);\n  };\n\n  const handleSortChange = (sortOption) => { // Receive sortOption as argument\n   setSelectedSort(sortOption);\n   let sortedProjects = [...projects]; // Initialize sortedProjects with the projects array\n  switch (sortOption) {\n    case 'newest':\n      sortedProjects = [...sortedProjects].sort((a, b) => b.date - a.date);\n      break;\n    case 'oldest':\n      sortedProjects = [...sortedProjects].sort((a, b) => a.date - b.date);\n      break;\n    case 'name-asc':\n      sortedProjects = [...sortedProjects].sort((a, b) => (a.title > b.title ? 1 : -1));\n      break;\n    case 'name-desc':\n      sortedProjects = [...sortedProjects].sort((a, b) => (a.title < b.title ? 1 : -1));\n      break;\n    default:\n      sortedProjects = projects.slice(); // Reset to original order if no sort selected\n  }\n  setSortedProjects(sortedProjects);\n};\n\n  const filteredProjectsForDisplay = sortedProjects.filter(\n    (project) => project.title !== 'Web Development' // Filter out \"Web Development\" project\n  );\n\n  return (\n    <section className=\"projects\">\n      <h2 className=\"projects-heading\">Projects</h2>\n      <div className=\"project-filters\">\n        <label htmlFor=\"filter\">Filter by Category:</label>\n        <select\n          id=\"filter\"\n          value={selectedFilter}\n          onChange={handleFilterChange}\n        >\n          <Option value=\"\">All</Option>\n          {/* Use Option component for category options */}\n          {projects.map((project) => (\n            <Option key={project.category} value={project.category}>\n              {project.category}\n            </Option>\n          ))}\n        </select>\n        <label htmlFor=\"sort\">Sort by:</label>\n        <select id=\"sort\" value=\"\" onChange={(e) => handleSortChange(e.target.value)}>\n          <Option value=\"\">None</Option>\n          <Option value=\"newest\">Newest First</Option>\n          <Option value=\"oldest\">Oldest First</Option>\n          <Option value=\"name-asc\">Name (A-Z)</Option>\n          <Option value=\"name-desc\">Name (Z-A)</Option>\n        </select>\n      </div>\n      <p className=\"project-description\">Here are some of the projects I've been working on:</p>\n      {filteredProjectsForDisplay.map((project) => (\n        <Project key={project.title} {...project} />\n      ))}\n    </section>\n  );\n}\n\nexport default Projects;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
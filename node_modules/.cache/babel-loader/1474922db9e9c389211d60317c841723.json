{"ast":null,"code":"var _jsxFileName = \"/Users/charlesdeng/code/projects/grace/src/project.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport \"./project.css\"; // Import project stylesheet\nimport useImagePath from './useImagePath';\nimport ImageCarousel from './ImageCarousel'; // Import ImageCarousel component\n\nfunction Project(projectData) {\n  const {\n    imageUrl,\n    title,\n    description,\n    link,\n    technologies,\n    accomplishments,\n    category,\n    date\n  } = projectData; // Destructuring\n  const imagePath = useImagePath(imageUrl); // Get image path\n  const [images, setImages] = useState([]); // State for image URLs (if project has multiple images)\n\n  // Handle cases where imageUrl is a string (single image) or an array (multiple images)\n  useEffect(() => {\n    if (Array.isArray(imageUrl)) {\n      setImages(imageUrl);\n    } else {\n      setImages([imageUrl]); // Convert single string to an array\n    }\n  }, [imageUrl]); // Update images on imageUrl change\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, images.length > 1 ? /*#__PURE__*/React.createElement(ImageCarousel, {\n    images: images,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }) // Render ImageCarousel for multiple images\n  : /*#__PURE__*/React.createElement(\"img\", {\n    src: imagePath,\n    alt: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }) // Render single image if only one exists\n  ), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"project-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, description), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"technologies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, technologies.map(tech => /*#__PURE__*/React.createElement(\"li\", {\n    key: tech,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, tech))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"accomplishments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, accomplishments.map(achievement => /*#__PURE__*/React.createElement(\"li\", {\n    key: achievement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, achievement)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-meta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Category: \", category)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-meta-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Date: \", date.toLocaleDateString())), /*#__PURE__*/React.createElement(\"a\", {\n    href: link,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: \"project-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"View Project\")));\n}\nexport default Project;","map":{"version":3,"names":["React","useState","useEffect","useRef","useImagePath","ImageCarousel","Project","projectData","imageUrl","title","description","link","technologies","accomplishments","category","date","imagePath","images","setImages","Array","isArray","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","length","src","alt","map","tech","key","achievement","toLocaleDateString","href","target","rel"],"sources":["/Users/charlesdeng/code/projects/grace/src/project.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport \"./project.css\"; // Import project stylesheet\nimport useImagePath from './useImagePath';\nimport ImageCarousel from './ImageCarousel'; // Import ImageCarousel component\n\nfunction Project(projectData) {\n  const { imageUrl, title, description, link, technologies, accomplishments, category, date } = projectData; // Destructuring\n  const imagePath = useImagePath(imageUrl); // Get image path\n  const [images, setImages] = useState([]); // State for image URLs (if project has multiple images)\n\n  // Handle cases where imageUrl is a string (single image) or an array (multiple images)\n  useEffect(() => {\n    if (Array.isArray(imageUrl)) {\n      setImages(imageUrl);\n    } else {\n      setImages([imageUrl]); // Convert single string to an array\n    }\n  }, [imageUrl]); // Update images on imageUrl change\n\n  return (\n    <div className=\"project\">\n      <div className=\"project-image\">\n        {images.length > 1 ? (\n          <ImageCarousel images={images} /> // Render ImageCarousel for multiple images\n        ) : (\n          <img src={imagePath} alt={title} /> // Render single image if only one exists\n        )}\n      </div>\n      <div className=\"project-details\">\n        <h3>{title}</h3>\n        <p className=\"project-description\">{description}</p>\n        <div className=\"project-info\">\n          <ul className=\"technologies\">\n            {technologies.map((tech) => (\n              <li key={tech}>{tech}</li>\n            ))}\n          </ul>\n          <br /> {/* Add a line break after technologies */}\n          <ul className=\"accomplishments\">\n            {accomplishments.map((achievement) => (\n              <li key={achievement}>{achievement}</li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"project-meta\"> {/* Use a separate div for meta info */}\n          <span className=\"category\">Category: {category}</span>\n        </div>\n        <div className=\"project-meta-right\"> {/* New div for right-aligned date */}\n          <span className=\"date\">Date: {date.toLocaleDateString()}</span>\n        </div>\n        <a href={link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"project-link\">\n          View Project\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default Project;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}